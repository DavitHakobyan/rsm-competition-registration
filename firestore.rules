rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to users collection if authenticated
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow read access to competitions for authenticated users
    match /competitions/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Allow read/write access to registrations for authenticated users
    match /registrations/{document} {
      allow read, write: if request.auth != null;
    }

    // Allow read/write access to students for authenticated users
    match /students/{document} {
      allow read, write: if request.auth != null;
    }

    // Parents collection: allow authenticated users to read (for email lookup)
    // and allow a user to create/update their own parent document (uid must match)
    match /parents/{parentId} {
      // Allow authenticated users to read parent documents (needed for lookup by email)
      allow read: if request.auth != null;

      // Creating a parent document is allowed if the authenticated user's UID matches the UID in the incoming data
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;

      // Only the owner (matching UID) can update or delete their parent document
      allow update, delete: if request.auth != null && resource.data.uid == request.auth.uid;

      // Children subcollection: only the parent (owner) may read and manage their children
      match /children/{childId} {
        // Parent can read their own children
        allow read: if request.auth != null && request.auth.uid == parentId;

        // Parent can create child documents under their own parent doc
        allow create: if request.auth != null && request.auth.uid == parentId;

        // Parent can update or delete their own children
        allow update, delete: if request.auth != null && request.auth.uid == parentId;
      }
    }
  }
}
